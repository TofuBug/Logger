<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="43" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2023-03-15" time="02:36:39">
  <environment clr-version="4.0.30319.42000" user-domain="LEIDOS-CORP" cwd="C:\Program Files (x86)\WindowsPowerShell\Modules\Logger" platform="Microsoft Windows 10 Enterprise|C:\Windows|\Device\Harddisk0\Partition4" machine-name="5XBN333" nunit-version="2.5.8.0" os-version="10.0.19044" user="y_stroper" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="14.6605" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Program Files (x86)\WindowsPowerShell\Modules\Logger\4.0.1.2\Tests\Logger.Tests.ps1" executed="True" result="Success" success="True" time="14.6605" asserts="0" description="C:\Program Files (x86)\WindowsPowerShell\Modules\Logger\4.0.1.2\Tests\Logger.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Check Classes Exist" executed="True" result="Success" success="True" time="1.0457" asserts="0" description="Check Classes Exist">
            <results>
              <test-suite type="TestFixture" name="Check Classes Exist.Attributes" executed="True" result="Success" success="True" time="0.6326" asserts="0" description="Check Classes Exist.Attributes">
                <results>
                  <test-suite type="TestFixture" name="Check Classes Exist.Attributes.LogFamily Attribute" executed="True" result="Success" success="True" time="0.6222" asserts="0" description="Check Classes Exist.Attributes.LogFamily Attribute">
                    <results>
                      <test-case description="Is Defined Type" name="Check Classes Exist.Attributes.LogFamily Attribute.Is Defined Type" time="0.4434" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Check Classes Exist.Classes" executed="True" result="Success" success="True" time="0.7503" asserts="0" description="Check Classes Exist.Classes">
                <results>
                  <test-suite type="TestFixture" name="Check Classes Exist.Classes.Log Class" executed="True" result="Success" success="True" time="0.0552" asserts="0" description="Check Classes Exist.Classes.Log Class">
                    <results>
                      <test-case description="Is Defined Type" name="Check Classes Exist.Classes.Log Class.Is Defined Type" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Check Classes Exist.Classes.Logger Class" executed="True" result="Success" success="True" time="0.1085" asserts="0" description="Check Classes Exist.Classes.Logger Class">
                    <results>
                      <test-case description="Is Defined Type" name="Check Classes Exist.Classes.Logger Class.Is Defined Type" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Check Classes Exist.Enumerations" executed="True" result="Success" success="True" time="0.9312" asserts="0" description="Check Classes Exist.Enumerations">
                <results>
                  <test-suite type="TestFixture" name="Check Classes Exist.Enumerations.LogEntryType" executed="True" result="Success" success="True" time="0.0848" asserts="0" description="Check Classes Exist.Enumerations.LogEntryType">
                    <results>
                      <test-case description="Is Defined Type" name="Check Classes Exist.Enumerations.LogEntryType.Is Defined Type" time="0.0575" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Check Classes Exist.Enumerations.LogEntryLevel" executed="True" result="Success" success="True" time="0.167" asserts="0" description="Check Classes Exist.Enumerations.LogEntryLevel">
                    <results>
                      <test-case description="Is Defined Type" name="Check Classes Exist.Enumerations.LogEntryLevel.Is Defined Type" time="0.0685" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Logger" executed="True" result="Success" success="True" time="11.6645" asserts="0" description="Logger">
            <results>
              <test-suite type="TestFixture" name="Logger.Defaults" executed="True" result="Success" success="True" time="0.3648" asserts="0" description="Logger.Defaults">
                <results>
                  <test-suite type="TestFixture" name="Logger.Defaults.Internal Dictionary" executed="True" result="Success" success="True" time="0.3519" asserts="0" description="Logger.Defaults.Internal Dictionary">
                    <results>
                      <test-case description="Type is Dictionary[string,Log]" name="Logger.Defaults.Internal Dictionary.Type is Dictionary[string,Log]" time="0.0594" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Initializes to a zero count" name="Logger.Defaults.Internal Dictionary.Initializes to a zero count" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-case description="Path should be Logger in Users Local Temp" name="Logger.Defaults.Path should be Logger in Users Local Temp" time="0.1622" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Roll over Size should be 2621476" name="Logger.Defaults.Roll over Size should be 2621476" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Append is True" name="Logger.Defaults.Append is True" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Logger.Customized Settings" executed="True" result="Success" success="True" time="0.6764" asserts="0" description="Logger.Customized Settings">
                <results>
                  <test-suite type="TestFixture" name="Logger.Customized Settings.Internal Dictionary" executed="True" result="Success" success="True" time="0.2709" asserts="0" description="Logger.Customized Settings.Internal Dictionary">
                    <results>
                      <test-case description="Type is Dictionary[string,log]" name="Logger.Customized Settings.Internal Dictionary.Type is Dictionary[string,log]" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Initializes to a zero count" name="Logger.Customized Settings.Internal Dictionary.Initializes to a zero count" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-case description="Path should be C:\LogTemp" name="Logger.Customized Settings.Path should be C:\LogTemp" time="0.0685" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Roll over Size should be 3000" name="Logger.Customized Settings.Roll over Size should be 3000" time="0.0552" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Append is False" name="Logger.Customized Settings.Append is False" time="0.0586" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Logger.Get" executed="True" result="Success" success="True" time="3.0707" asserts="0" description="Logger.Get">
                <results>
                  <test-suite type="TestFixture" name="Logger.Get.Write's should not throw" executed="True" result="Success" success="True" time="1.4375" asserts="0" description="Logger.Get.Write's should not throw">
                    <results>
                      <test-case description="Warning" name="Logger.Get.Write's should not throw.Warning" time="1.0892" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Error" name="Logger.Get.Write's should not throw.Error" time="0.0839" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Information" name="Logger.Get.Write's should not throw.Information" time="0.0742" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Verbose" name="Logger.Get.Write's should not throw.Verbose" time="0.0732" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Logger.Get.Write's with data should not throw" executed="True" result="Success" success="True" time="1.7829" asserts="0" description="Logger.Get.Write's with data should not throw">
                    <results>
                      <test-case description="Warning" name="Logger.Get.Write's with data should not throw.Warning" time="0.083" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Error" name="Logger.Get.Write's with data should not throw.Error" time="0.0743" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Information" name="Logger.Get.Write's with data should not throw.Information" time="0.0768" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Verbose" name="Logger.Get.Write's with data should not throw.Verbose" time="0.0759" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-case description="Should Return [Log]" name="Logger.Get.Should Return [Log]" time="0.06" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should be named " name="Logger.Get.Should be named " time="0.048" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Logger.RollOver" executed="True" result="Success" success="True" time="3.4594" asserts="0" description="Logger.RollOver">
                <results>
                  <test-case description="Should not roll over yet file size 2485 has not exceeded 3000 in size" name="Logger.RollOver.Should not roll over yet file size 2485 has not exceeded 3000 in size" time="0.0969" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not roll over yet file size 2680 has not exceeded 3000 in size" name="Logger.RollOver.Should not roll over yet file size 2680 has not exceeded 3000 in size" time="0.0536" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should not roll over yet file size 2875 has not exceeded 3000 in size" name="Logger.RollOver.Should not roll over yet file size 2875 has not exceeded 3000 in size" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should be ready to roll over yet file size 3070 has meet or exceeded 3000 in size" name="Logger.RollOver.Should be ready to roll over yet file size 3070 has meet or exceeded 3000 in size" time="0.0638" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should have rolled over file size 195 is now less than 3000 in size" name="Logger.RollOver.Should have rolled over file size 195 is now less than 3000 in size" time="0.0852" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Logger.Max Message Size" executed="True" result="Success" success="True" time="7.1574" asserts="0" description="Logger.Max Message Size">
                <results>
                  <test-suite type="TestFixture" name="Logger.Max Message Size.Write's longer than max message size should not throw" executed="True" result="Success" success="True" time="1.6715" asserts="0" description="Logger.Max Message Size.Write's longer than max message size should not throw">
                    <results>
                      <test-case description="Warning" name="Logger.Max Message Size.Write's longer than max message size should not throw.Warning" time="0.0777" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Error" name="Logger.Max Message Size.Write's longer than max message size should not throw.Error" time="0.5017" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Information" name="Logger.Max Message Size.Write's longer than max message size should not throw.Information" time="0.5466" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Verbose" name="Logger.Max Message Size.Write's longer than max message size should not throw.Verbose" time="0.5023" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Logger.Max Message Size.Write's with data longer than max message size should not throw" executed="True" result="Success" success="True" time="3.6902" asserts="0" description="Logger.Max Message Size.Write's with data longer than max message size should not throw">
                    <results>
                      <test-case description="Warning" name="Logger.Max Message Size.Write's with data longer than max message size should not throw.Warning" time="0.4996" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Error" name="Logger.Max Message Size.Write's with data longer than max message size should not throw.Error" time="0.4944" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Information" name="Logger.Max Message Size.Write's with data longer than max message size should not throw.Information" time="0.4943" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Verbose" name="Logger.Max Message Size.Write's with data longer than max message size should not throw.Verbose" time="0.4964" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Logger.LogFamily Attribute(s)" executed="True" result="Success" success="True" time="10.6073" asserts="0" description="Logger.LogFamily Attribute(s)">
                <results>
                  <test-suite type="TestFixture" name="Logger.LogFamily Attribute(s).Single Attribute" executed="True" result="Success" success="True" time="1.9931" asserts="0" description="Logger.LogFamily Attribute(s).Single Attribute">
                    <results>
                      <test-suite type="TestFixture" name="Logger.LogFamily Attribute(s).Single Attribute.No Path" executed="True" result="Success" success="True" time="0.967" asserts="0" description="Logger.LogFamily Attribute(s).Single Attribute.No Path">
                        <results>
                          <test-case description="Should Create No Path.log" name="Logger.LogFamily Attribute(s).Single Attribute.No Path.Should Create No Path.log" time="0.0757" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Logger.LogFamily Attribute(s).Single Attribute.Relative Path" executed="True" result="Success" success="True" time="1.4781" asserts="0" description="Logger.LogFamily Attribute(s).Single Attribute.Relative Path">
                        <results>
                          <test-case description="Should Create Relative Path.log" name="Logger.LogFamily Attribute(s).Single Attribute.Relative Path.Should Create Relative Path.log" time="0.0556" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Logger.LogFamily Attribute(s).Single Attribute.Absolute Path" executed="True" result="Success" success="True" time="1.9859" asserts="0" description="Logger.LogFamily Attribute(s).Single Attribute.Absolute Path">
                        <results>
                          <test-case description="Should Create Absolute Path.log" name="Logger.LogFamily Attribute(s).Single Attribute.Absolute Path.Should Create Absolute Path.log" time="0.0553" asserts="0" success="True" result="Success" executed="True" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Logger.LogFamily Attribute(s).Multiple Attributes" executed="True" result="Success" success="True" time="2.9219" asserts="0" description="Logger.LogFamily Attribute(s).Multiple Attributes">
                    <results>
                      <test-case description="Should Create One.log and Two.log" name="Logger.LogFamily Attribute(s).Multiple Attributes.Should Create One.log and Two.log" time="0.0933" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Logger.LogFamily Attribute(s).Parent Attribute" executed="True" result="Success" success="True" time="3.439" asserts="0" description="Logger.LogFamily Attribute(s).Parent Attribute">
                    <results>
                      <test-case description="Should Create still Parent.log even though log call was from child call" name="Logger.LogFamily Attribute(s).Parent Attribute.Should Create still Parent.log even though log call was from child call" time="0.0737" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>